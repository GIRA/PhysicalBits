"Declaration of core primitives"
prim turnOn;
prim turnOff;
prim read;
prim write;
prim getPinMode;
prim setPinMode;
prim toggle;
prim getServoDegrees;
prim setServoDegrees;
prim servoWrite;
prim + : add;
prim - : subtract;
prim * : multiply;
prim / : divide;
prim sin;
prim cos;
prim tan;
prim == : equals;
prim != : notEquals;
prim > : greaterThan;
prim >= : greaterThanOrEquals;
prim < : lessThan;
prim <= : lessThanOrEquals;
prim ! : negate;
prim delayMs;
prim & : bitwiseAnd;
prim | : bitwiseOr;
prim millis;
prim coroutine;
prim serialWrite;
prim round;
prim ceil;
prim floor;
prim sqrt;
prim abs;
prim ln;
prim log10;
prim exp;
prim pow10;
prim asin;
prim acos;
prim atan;
prim atan2;
prim ** : power;
prim isOn;
prim isOff;
prim % : remainder;
prim constrain;
prim randomInt;
prim random;
prim isEven;
prim isOdd;
prim isPrime;
prim isWhole;
prim isPositive;
prim isNegative;
prim isDivisibleBy;
prim seconds;
prim isCloseTo;
prim delayS;
prim delayM;
prim minutes;
prim mod : modulo;
prim startTone : tone;
prim stopTone : noTone;

prim lcd_init;
prim lcd_print;

proc playTone(pin, tone, ms) {
  startTone(pin, tone);
  delayMs(ms);
  stopTone(pin);
}

proc stopToneAndWait(pin, ms) {
  stopTone(pin);
  delayMs(ms);
}

func map(value, fromLow, fromHigh, toLow, toHigh) {
  return (value - fromLow) * (toHigh - toLow) / (fromHigh - fromLow) + toLow;
}

func isBetween(value, min, max) {
  return value >= min && value <= max;
}

"The following NOP functions were added for consistency between the casting
blocks and the 'Uzi syntax' mode. Normally, they shouldn't be used as they
increase code size with no reason (at least until I implement inlining)."
"TODO(Richo): Implement inlining"
func pin(value) { return value; }
func number(value) { return value; }
func bool(value) { return value; }
