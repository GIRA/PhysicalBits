{:source-paths ["env/dev/cljs" "src" "test"]

 :dependencies [[proto-repl "0.3.1"]
                [clj-petitparser "0.1.2-SNAPSHOT"]
                [com.taoensso/tufte "2.2.0"]]

 :nrepl {:port 9000
         :middleware []}

 :dev-http {8081 ["public"
                  "public/test"
                  "../../gui"]}

 ; NOTE(Richo): We disable caching for the middleware.utils.fs.browser namespace because
 ; it currently uses a macro to read the "uzi" folder at compile time. If we allow caching
 ; we risk compiling an old version of the uzi libraries.
 :cache-blockers #{middleware.utils.fs.browser}

 :builds {:mendieta {:target :node-script
                     :main middleware.mendieta/main
                     :output-to "out/mendieta/main.js"}
          
          :simulator {; NOTE(Richo): This build is used in the GUI in order to compile
                      ; as well as interact with the wasm simulator.
                      :target :browser
                      :output-dir "public/simulator/js"
                      :build-hooks [(user/copy-output "../../gui/ide/middleware")]
                      :modules {:main {:init-fn middleware.simulator/init}}}

          :controller {; NOTE(Richo): This build is is used by mendieta
                       :target :node-library
                       :exports {:on-update middleware.controller/on-update
                                 :connect middleware.controller/connect!
                                 :disconnect middleware.controller/disconnect!
                                 :compile middleware.controller/compile
                                 :run middleware.controller/run}
                       :output-to "out/controller/controller.js"
                       :compiler-options {:optimizations :advanced}}

          :browser-test {; NOTE(Richo): This build runs the tests in the browser. Since
                         ; we don't have write access to the filesystem (yet), these tests
                         ; don't generate vm test files.
                         :target :browser-test
                         :test-dir "public/test"
                         :ns-regexp "-test\\d?$"}

          :node-test {; NOTE(Richo): This build runs the tests in node. The only 
                      ; difference is these tests include the vm test files generation
                      :target :node-test
                      :ns-regexp "-(test|gen)\\d?$"
                      :output-to "out/controller/tests.js"
                      :autorun true}}}
