import  from 'core.uzi';
import t from 'test_15.uzi';

"{scope: global, locals: (), globals: (t.a)}" var t.a = 0;

prim turnOn;
prim turnOff;
prim read;
prim write;
prim getPinMode;
prim setPinMode;
prim toggle;
prim getServoDegrees;
prim setServoDegrees;
prim servoWrite;
prim + : add;
prim - : subtract;
prim * : multiply;
prim / : divide;
prim sin;
prim cos;
prim tan;
prim == : equals;
prim != : notEquals;
prim > : greaterThan;
prim >= : greaterThanOrEquals;
prim < : lessThan;
prim <= : lessThanOrEquals;
prim ! : negate;
prim delayMs;
prim & : bitwiseAnd;
prim | : bitwiseOr;
prim millis;
prim coroutine;
prim serialWrite;
prim round;
prim ceil;
prim floor;
prim sqrt;
prim abs;
prim ln;
prim log10;
prim exp;
prim pow10;
prim asin;
prim acos;
prim atan;
prim atan2;
prim ** : power;
prim isOn;
prim isOff;
prim % : remainder;
prim constrain;
prim randomInt;
prim random;
prim isEven;
prim isOdd;
prim isPrime;
prim isWhole;
prim isPositive;
prim isNegative;
prim isDivisibleBy;
prim seconds;
prim isCloseTo;
prim delayS;
prim delayM;
prim minutes;
prim mod : modulo;
prim startTone : tone;
prim stopTone : noTone;
prim t.turnOn : turnOn;
prim t.turnOff : turnOff;
prim t.read : read;
prim t.write : write;
prim t.getPinMode : getPinMode;
prim t.setPinMode : setPinMode;
prim t.toggle : toggle;
prim t.getServoDegrees : getServoDegrees;
prim t.setServoDegrees : setServoDegrees;
prim t.servoWrite : servoWrite;
prim t.+ : add;
prim t.- : subtract;
prim t.* : multiply;
prim t./ : divide;
prim t.sin : sin;
prim t.cos : cos;
prim t.tan : tan;
prim t.== : equals;
prim t.!= : notEquals;
prim t.> : greaterThan;
prim t.>= : greaterThanOrEquals;
prim t.< : lessThan;
prim t.<= : lessThanOrEquals;
prim t.! : negate;
prim t.delayMs : delayMs;
prim t.& : bitwiseAnd;
prim t.| : bitwiseOr;
prim t.millis : millis;
prim t.coroutine : coroutine;
prim t.serialWrite : serialWrite;
prim t.round : round;
prim t.ceil : ceil;
prim t.floor : floor;
prim t.sqrt : sqrt;
prim t.abs : abs;
prim t.ln : ln;
prim t.log10 : log10;
prim t.exp : exp;
prim t.pow10 : pow10;
prim t.asin : asin;
prim t.acos : acos;
prim t.atan : atan;
prim t.atan2 : atan2;
prim t.** : power;
prim t.isOn : isOn;
prim t.isOff : isOff;
prim t.% : remainder;
prim t.constrain : constrain;
prim t.randomInt : randomInt;
prim t.random : random;
prim t.isEven : isEven;
prim t.isOdd : isOdd;
prim t.isPrime : isPrime;
prim t.isWhole : isWhole;
prim t.isPositive : isPositive;
prim t.isNegative : isNegative;
prim t.isDivisibleBy : isDivisibleBy;
prim t.seconds : seconds;
prim t.isCloseTo : isCloseTo;
prim t.delayS : delayS;
prim t.delayM : delayM;
prim t.minutes : minutes;
prim t.mod : modulo;
prim t.startTone : tone;
prim t.stopTone : noTone;

task t.foo() {
	"{scope: local, locals: (), globals: (t.a)}" var b = 0;
	"{scope: global, locals: (b), globals: (t.a)}" t.a = 10;
	"{scope: local, locals: (b), globals: (t.a)}" b = "{scope: global, locals: (b), globals: (t.a)}" t.a;
	"{scope: local, locals: (), globals: (t.a)}" var a = 100;
	"{scope: local, locals: (b, a), globals: (t.a)}" b = "{scope: local, locals: (b, a), globals: (t.a)}" a;
}